"use strict";(self.webpackChunk_map_colonies_developer_portal=self.webpackChunk_map_colonies_developer_portal||[]).push([[7872],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(r),m=n,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return r?a.createElement(f,l(l({ref:t},p),{},{components:r})):a.createElement(f,l({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:n,l[1]=i;for(var u=2;u<o;u++)l[u]=r[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},18679:(e,t,r)=>{r.d(t,{Z:()=>l});var a=r(67294),n=r(86010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:r,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,n.Z)(o.tabItem,l),hidden:r},t)}},73992:(e,t,r)=>{r.d(t,{Z:()=>x});var a=r(87462),n=r(67294),o=r(86010),l=r(72957),i=r(16550),s=r(75238),u=r(33609),p=r(92560);function c(e){return function(e){var t;return(null==(t=n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:r,attributes:a,default:n}}=e;return{value:t,label:r,attributes:a,default:n}}))}function d(e){const{values:t,children:r}=e;return(0,n.useMemo)((()=>{const e=t??c(r);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function m(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:r}=e;const a=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,s._X)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function h(e){const{defaultValue:t,queryString:r=!1,groupId:a}=e,o=d(e),[l,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=r.find((e=>e.default))??r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,u]=f({queryString:r,groupId:a}),[c,h]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,p.Nk)(r);return[a,(0,n.useCallback)((e=>{r&&o.set(e)}),[r,o])]}({groupId:a}),k=(()=>{const e=s??c;return m({value:e,tabValues:o})?e:null})();(0,n.useLayoutEffect)((()=>{k&&i(k)}),[k]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),h(e)}),[u,h,o]),tabValues:o}}var k=r(51048);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:r,selectedValue:i,selectValue:s,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.o5)(),d=e=>{const t=e.currentTarget,r=p.indexOf(t),a=u[r].value;a!==i&&(c(t),s(a))},m=e=>{var t;let r=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=p.indexOf(e.currentTarget)+1;r=p[t]??p[0];break}case"ArrowLeft":{const t=p.indexOf(e.currentTarget)-1;r=p[t]??p[p.length-1];break}}null==(t=r)||t.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":r},t)},u.map((e=>{let{value:t,label:r,attributes:l}=e;return n.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:d},l,{className:(0,o.Z)("tabs__item",g.tabItem,null==l?void 0:l.className,{"tabs__item--active":i===t})}),r??t)})))}function b(e){let{lazy:t,children:r,selectedValue:a}=e;const o=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function y(e){const t=h(e);return n.createElement("div",{className:(0,o.Z)("tabs-container",g.tabList)},n.createElement(v,(0,a.Z)({},e,t)),n.createElement(b,(0,a.Z)({},e,t)))}function x(e){const t=(0,k.Z)();return n.createElement(y,(0,a.Z)({key:String(t)},e))}},11438:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var a=r(87462),n=(r(67294),r(3905)),o=r(73992),l=r(18679);const i={id:"raster-export-service",slug:"raster-export",title:"Export \ud83d\udce6",description:"Export map data",tags:["raster","API","export"]},s="Export Service \ud83d\udce6",u={unversionedId:"MapColonies/Raster/services/raster-export-service",id:"MapColonies/Raster/services/raster-export-service",title:"Export \ud83d\udce6",description:"Export map data",source:"@site/docs/MapColonies/Raster/services/export.mdx",sourceDirName:"MapColonies/Raster/services",slug:"/MapColonies/Raster/services/raster-export",permalink:"/docs/MapColonies/Raster/services/raster-export",draft:!1,editUrl:"https://github.com/MapColonies/developer-portal/tree/main/packages/create-docusaurus/templates/shared/docs/MapColonies/Raster/services/export.mdx",tags:[{label:"raster",permalink:"/docs/tags/raster"},{label:"API",permalink:"/docs/tags/api"},{label:"export",permalink:"/docs/tags/export"}],version:"current",frontMatter:{id:"raster-export-service",slug:"raster-export",title:"Export \ud83d\udce6",description:"Export map data",tags:["raster","API","export"]},sidebar:"docSidebar",previous:{title:"Profile v1",permalink:"/docs/MapColonies/Raster/services/catalog/raster-catalog-profile-v1"},next:{title:"Map \ud83d\uddfa\ufe0f",permalink:"/docs/MapColonies/Raster/services/map-service"}},p={},c=[{value:"Purpose",id:"purpose",level:2},{value:"Usage",id:"usage",level:2},{value:"Files structure",id:"files-structure",level:2},{value:"GPKG",id:"gpkg",level:4},{value:"Metadata",id:"metadata",level:4},{value:"Important Notes",id:"important-notes",level:3},{value:"Appendix",id:"appendix",level:3}],d={toc:c},m="wrapper";function f(e){let{components:t,...r}=e;return(0,n.kt)(m,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"export-service-"},"Export Service \ud83d\udce6"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Click ",(0,n.kt)("a",{parentName:"p",href:"/docs/MapColonies/raster/services/export/api"},"here")," for the OpenAPI")),(0,n.kt)("h2",{id:"purpose"},"Purpose"),(0,n.kt)("p",null,"The export service is responsible for packaging mapping data that can be downloaded by clients or transferred to other systems. Export can be requested for various mapping products within a specific region. The export module exposes an API and Web-based tool."),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("p",null,"You can create export tasks via the ",(0,n.kt)("a",{parentName:"p",href:"/docs/MapColonies/raster/services/export/api"},"Exporter-Trigger service API"),"."),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("strong",{parentName:"p"},"Authentication must be integrated in order to communicate with export service."),(0,n.kt)("br",null),"\n",(0,n.kt)("strong",{parentName:"p"},"See the principles ",(0,n.kt)("a",{parentName:"strong",href:"/docs/MapColonies/authentication"},"here")))),(0,n.kt)("p",null,"You can see the full OpenAPI spec ","[here]","(<RASTER-EXPORT-SERVICE_URL>/docs/api)"),(0,n.kt)("p",null,"The API consists of several methods:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"create (deprecated) - you can create a new export task, if the requested task params were previously created they are returned in the response, else via provided webhook",(0,n.kt)("admonition",{parentName:"li",type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"The create API is in use of GetMap. This use is now deprecated. Use ",(0,n.kt)("inlineCode",{parentName:"p"},"create/roi")," instead."))),(0,n.kt)("li",{parentName:"ol"},"create/roi - you can create a new export task from ROI (region of intreset - GoeJson FeatureCollection), if the requested task params were previously created they are returned in the response, else via provided webhook"),(0,n.kt)("li",{parentName:"ol"},"taskStatus/{jobId} - Get status (and percentage) by the id that is returned from the create method"),(0,n.kt)("li",{parentName:"ol"},"storage - returns free and total existing size on export service storage")),(0,n.kt)("h2",{id:"files-structure"},"Files structure"),(0,n.kt)("h4",{id:"gpkg"},"GPKG"),(0,n.kt)("p",null,"SQLite DB file that contains all the necessary tiles\nfor more details view:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"http://www.geopackage.org/spec/"},"http://www.geopackage.org/spec/"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://www.sqlite.org/index.html"},"https://www.sqlite.org/index.html")))),(0,n.kt)("p",null,"Our specification consists of the following:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"terms ",(0,n.kt)("a",{parentName:"li",href:"/docs/MapColonies/terms"},"here")),(0,n.kt)("li",{parentName:"ul"},"tiling scheme (World CRS84 TileMatrixSet) ","[here]","(/docs/MapColonies/Raster/overview#Raster Tiling scheme In Detail)"),(0,n.kt)("li",{parentName:"ul"},'file extension: ".gpkg"')),(0,n.kt)("h4",{id:"metadata"},"Metadata"),(0,n.kt)("p",null,"JSON file that contains the record metadata such as footprint and resolution"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'file extension: ".JSON"'),(0,n.kt)("li",{parentName:"ul"},"provided fields follow the profile convention ",(0,n.kt)("a",{parentName:"li",href:"/docs/MapColonies/Raster/services/catalog/raster-catalog-profile-v1"},"here"),(0,n.kt)("strong",{parentName:"li"},"Note:"),' when using create/roi API the metadata link is returned via "links" response, while in create (deprecated) API the metadata can be reached only when replacing the GPKG link suffix from ".GPKG" to ".JSON"')),(0,n.kt)("h3",{id:"important-notes"},"Important Notes"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"The data is returned via callback request or on /create request response (structure in appendix 1)"),(0,n.kt)("li",{parentName:"ol"},"To download the data one needs to use authentication token")),(0,n.kt)("h3",{id:"appendix"},"Appendix"),(0,n.kt)(o.Z,{mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"appendix-1",label:"Callback request structure (create/roi)",mdxType:"TabItem"},(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"status: Enum - OperationStatus.IN_PROGRESS | OperationStatus.COMPLETED | OperationStatus.FAILED"),(0,n.kt)("li",{parentName:"ul"},"links: Object - consist of download links for the exported GPKG and metadata file"),(0,n.kt)("li",{parentName:"ul"},"expirationTime: string($date) - date when the exported file will be deleted"),(0,n.kt)("li",{parentName:"ul"},"fileSize: number - GPKG file size in bytes"),(0,n.kt)("li",{parentName:"ul"},"recordCatalogId: uuid - Raster Catalog Record DB ID - from orginal request"),(0,n.kt)("li",{parentName:"ul"},"description: string - the description that was sent to the create method"),(0,n.kt)("li",{parentName:"ul"},"roi: FeatureCollection - requested region of intrest"),(0,n.kt)("li",{parentName:"ul"},"jobId: uuid - unique identifier for export request - the field that was returned from orginal create request"),(0,n.kt)("li",{parentName:"ul"},"errorReason: string - if export task was unsuccessful this field will describe the error"))),(0,n.kt)(l.Z,{value:"appendix-2",label:"Callback Request Example (create/roi)",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Callback Request Example"',title:'"Callback',Request:!0,'Example"':!0},'{\n  "status": "Completed",\n  "links": {\n    "dataURI": "{downloadServiceURL}/{directory}/{GPKGFileName}.gpkg";\n    "metadataURI": "{downloadServiceURL}/{directory}/{GPKGFileName}.json";\n  },\n  "expirationTime": "1970-01-17T12:27:14.520Z",\n  "fileSize": "120000",\n  "recordCatalogId": "ef03ca54-c68e-4ca8-8432-50ae5ad7a7f8",\n  "description": "This is an export task description",\n  "roi": {\n    "type": "FeatureCollection",\n    "features": [\n      {\n        "type": "Feature",\n        "properties": {\n          "maxResolutionDeg": 0.067\n        },\n        "geometry": {\n          "coordinates": [\n            [\n              [\n                35.003280642044984,\n                31.951118514806808\n              ],\n              [\n                34.900854406671726,\n                31.951118514806808\n              ],\n              [\n                34.900854406671726,\n                31.930837592169695\n              ],\n              [\n                35.003280642044984,\n                31.930837592169695\n              ],\n              [\n                35.003280642044984,\n                31.951118514806808\n              ]\n            ]\n          ],\n          "type": "Polygon"\n        }\n      }\n    ]\n  },\n  "jobId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",\n  "errorReason": ""\n}\n'))),(0,n.kt)(l.Z,{value:"appendix-3",label:"/create and /create/roi response for In-Progress Export",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": "In-Progress",\n  "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",\n  "taskIds": [\n    "3fa85f64-5717-4562-b3fc-2c963f66afa6"\n  ]\n}\n'))),(0,n.kt)(l.Z,{value:"appendix-4",label:"Response for cached export task",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": "Completed",\n  "links": {\n    "dataURI": "{downloadServiceURL}/{directory}/{GPKGFileName}.gpkg";\n    "metadataURI": "{downloadServiceURL}/{directory}/{GPKGFileName}.json";\n  },\n  "expirationTime": "1970-01-17T12:27:14.520Z",\n  "fileSize": "120000",\n  "recordCatalogId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",\n  "description": "This is an export task description",\n  "roi": {\n    "type": "FeatureCollection",\n    "features": [\n      {\n        "type": "Feature",\n        "properties": {\n          "maxResolutionDeg": 0.067\n        },\n        "geometry": {\n          "coordinates": [\n            [\n              [\n                35.003280642044984,\n                31.951118514806808\n              ],\n              [\n                34.900854406671726,\n                31.951118514806808\n              ],\n              [\n                34.900854406671726,\n                31.930837592169695\n              ],\n              [\n                35.003280642044984,\n                31.930837592169695\n              ],\n              [\n                35.003280642044984,\n                31.951118514806808\n              ]\n            ]\n          ],\n          "type": "Polygon"\n        }\n      }\n    ]\n  },\n  "jobId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",\n  "errorReason": ""\n}\n')))))}f.isMDXComponent=!0}}]);